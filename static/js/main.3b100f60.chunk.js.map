{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactsList/ContactList.module.scss","redux/App/app-actions.js","redux/App/app-reducer.js","redux/ContactForm/contactForm-actions.js","redux/ContactForm/contactForm-reducer.js","redux/reducer.js","redux/store.js","redux/App/app-operations.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","App.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","action","payload","state","filter","item","id","combineReducers","changeInputName","changeInputNumber","submitFormActions","name","submitActions","number","rootReducer","contacts","contactsReducer","middleWare","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","middleware","axios","defaults","baseURL","filterContacts","allContacts","normalized","toLowerCase","contact","includes","connect","list","dispatch","deleteContact","delete","then","catch","error","className","styles","map","type","onClick","button","ContactForm","onChangeInput","event","setState","currentTarget","value","onSubmitForm","props","onSubmit","console","log","preventDefault","find","alert","length","onResetForm","this","fetchContacts","form","label","input","onChange","Component","post","response","data","addContact","a","get","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b100f60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Filter_list__Cj8fg\",\"item\":\"Filter_item__2Uhcw\",\"button\":\"Filter_button__56Kds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactList_label__1Zy9o\",\"input\":\"ContactList_input__2BpHJ\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('app/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('app/fetchContactSuccess');\r\nexport const fetchContactError = createAction('app/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('app/addContactRequest');\r\nexport const addContactSuccess = createAction('app/addContactSuccess');\r\nexport const addContactError = createAction('app/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('app/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('app/deleteContactSuccess');\r\nexport const deleteContactError = createAction('app/deleteContactError');\r\n\r\nexport const changeFilter = createAction('app/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './app-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, action) => action.payload,\r\n  [addContactSuccess]: (state, action) => [action.payload, ...state],\r\n  [deleteContactSuccess]: (state, action) =>\r\n    state.filter(item => item.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeInputName = createAction('contactForm/changeInputName');\r\n\r\nconst changeInputNumber = createAction('contactForm/changeInputNumber');\r\n\r\nconst submitFormActions = createAction('contactForm/submit');\r\n\r\nexport default { submitFormActions, changeInputName, changeInputNumber };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport submitActions from './contactForm-actions';\r\n\r\nconst name = createReducer('', {\r\n  [submitActions.changeInputName]: (_, action) => action.payload,\r\n});\r\n\r\nconst number = createReducer('', {\r\n  [submitActions.changeInputNumber]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  name,\r\n  number,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport contactsReducer from './App/app-reducer';\r\nimport contactFormReducer from './ContactForm/contactForm-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './reducer';\r\n\r\n// const myMiddleware = store => next => action => {\r\n//   console.log('Моя прослойка', action);\r\n//   next(action);\r\n// };\r\n\r\nconst middleWare = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: middleWare,\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './app-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040/contacts';\r\n\r\n// Асинхронный вариант!\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const response = await axios.get(`/`);\r\n    dispatch(fetchContactSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\n//   axios\r\n//     .get(`/`)\r\n//     .then(response => dispatch(fetchContactSuccess(response.data)))\r\n//     .catch(error => dispatch(fetchContactError(error)));\r\n// };\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(`/`, contact)\r\n    .then(response => dispatch(addContactSuccess(response.data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './Filter.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../redux/App/app-operations';\r\n\r\nconst Filter = ({ list, deleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {list.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          <span>{name}</span>\r\n          <span>{number}</span>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => deleteContact(id)}\r\n            className={styles.button}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  list: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nconst filterContacts = (filter, allContacts) => {\r\n  const normalized = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalized),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter, items } }) => ({\r\n  list: filterContacts(filter, items),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/App/app-operations';\r\nimport { fetchContacts } from '../../redux/App/app-operations';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  onChangeInput = event => {\r\n    this.setState({\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  onSubmitForm = event => {\r\n    const { name, number } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n    console.log(contacts);\r\n\r\n    event.preventDefault();\r\n\r\n    const findContact = contacts.find(contact => contact.name === name);\r\n    if (findContact) {\r\n      alert(`${name} is already in the contact`);\r\n    } else if (number.length !== 0) {\r\n      onSubmit(name, number);\r\n      this.onResetForm();\r\n    }\r\n  };\r\n\r\n  onResetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.onSubmitForm}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.onChangeInput}\r\n          ></input>\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.onChangeInput}\r\n          ></input>\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/App/app-actions';\r\nimport styles from './ContactList.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ value, changeFilter }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name:\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={changeFilter}\r\n      className={styles.input}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nContactList.propTypes = {\r\n  value: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: event => dispatch(changeFilter(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './redux/App/app-actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './styles.css';\r\nimport Filter from './components/Filter';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactsList';\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     contacts: [\r\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     ],\r\n//     filter: '',\r\n//   };\r\n\r\n//   addContact = (name, number) => {\r\n//     const contact = {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number,\r\n//     };\r\n//     this.setState({\r\n//       contacts: [contact, ...this.state.contacts],\r\n//     });\r\n//   };\r\n\r\n//   changeFilter = event => {\r\n//     this.setState({\r\n//       filter: event.currentTarget.value,\r\n//     });\r\n//   };\r\n\r\n//   normalizedList = () => {\r\n//     const { filter, contacts } = this.state;\r\n//     const normalized = filter.toLowerCase();\r\n//     const filterContacts = contacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(normalized),\r\n//     );\r\n\r\n//     return filterContacts;\r\n//   };\r\n\r\n//   deleteContact = id => {\r\n//     this.setState(prevState => ({\r\n//       contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n//       filter: '',\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"phoneBook\">\r\n//         <h1 className=\"main-title\">Phonebook</h1>\r\n//         <ContactForm\r\n//         contacts={this.state.contacts}\r\n//         addContact={this.addContact}\r\n//         />\r\n\r\n//         <h2 className=\"second-title\">Contacts</h2>\r\n//         <ContactList\r\n//         value={this.state.filter}\r\n//         changeFilter={this.changeFilter}\r\n//         />\r\n//         <Filter />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst App = () => (\r\n  <div className=\"phoneBook\">\r\n    <h1 className=\"main-title\">Phonebook</h1>\r\n    <ContactForm\r\n    // contacts={this.state.contacts}\r\n    // addContact={this.addContact}\r\n    />\r\n\r\n    <h2 className=\"second-title\">Contacts</h2>\r\n    <ContactList />\r\n    <Filter />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2apf5\",\"label\":\"ContactForm_label__9U1Wv\",\"input\":\"ContactForm_input__3Y8py\",\"button\":\"ContactForm_button__UHBUH\"};"],"sourceRoot":""}